/*
 * TCSS305 - Spring 2013
 * Assignment 2 - ShoppingCart - Crystal Miraflor
 * 
 */
import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

/**
 * The test for the Item class.
 * 
 * @author Crystal Miraflor (mirafcry@uw.edu)
 * @version ver. 1.00
 *
 */
public class ItemTest {
  
  //fields
  /**
   * Tolerance for doubles.
   */
  private static final double TOLERANCE = .00001;
  
  /**
   * List of items.
   */
  private Item[] my_item_list;
  

  /**
   * The setup before running the tests.
   * Initializes the list of items.
   */
  @Before
  public void setUp() {
    my_item_list = new Item[] {
      new Item("BioShock Infinite", 59.99),
      new Item("RedBull", 3.00, 4, 10.00),
      new Item("Playstation Vita Bundle", 200.00),
      new Item("Sticky Notes", .50, 6, 1.50),
      new Item("Game of Thrones Season 2 Blu-ray", 43.00),
      new Item("Pre-owned PS3 game", 19.99, 2, 30.00),
      new Item("Girls' Generation 2011 Tour CD", 65.00),
      new Item("Girls' Generation buttons", 1.50, 9, 11.00)
    };
  }

  /**
   * 
   */
  @Test
  public void testHashCode() {
    fail("Not yet implemented");
  }
  
  /**
   * 
   */
  @Test
  public void testItemStringDoubleIntDouble() {
    fail("Not yet implemented");
  }

  /**
   * 
   */
  @Test
  public void testItemStringDouble() {
    fail("Not yet implemented");
  }
  
  /**
   * Tests if the calculations of only single-priced items
   * are correct.
   */
  @Test
  public void testCalculatePriceForSingle() {
    
    //2 GoT Blu-ray DVDs - $86.00
    assertEquals(86.00, my_item_list[4].calculatePriceFor(2), TOLERANCE);
    
    //1 BioShock - $59.99
    assertEquals(59.99, my_item_list[0].calculatePriceFor(1), TOLERANCE);
    
    //5 Girls' Generation CDs - $325.00
    assertEquals(325.00, my_item_list[6].calculatePriceFor(5), TOLERANCE);
    
  }

  
  /**
   * Tests if the calculations of items with bulk quantities
   * and prices are calculated correctly.
   */
  @Test
  public void testCalculatePriceForBulk() {
    
    //14 RedBulls = $36.00
    assertEquals(36.00, my_item_list[1].calculatePriceFor(14), TOLERANCE); 
    
    //29 Sticky Notes = $8.50
    assertEquals(8.50, my_item_list[3].calculatePriceFor(29), TOLERANCE); 

  }

  /**
   * 
   */
  @Test
  public void testToString() {
    assertEquals("Item 1 toString.", "BioShock Infinite, $59.99", my_item_list[0].toString());
    assertEquals("Item 8 toString.", "Girls' Generation buttons, $1.50 (9 for $11.00)", 
                 my_item_list[7].toString());
  }

  /**
   * 
   */
  @Test
  public void testEqualsObject() {
    fail("Not yet implemented");
  }

}
